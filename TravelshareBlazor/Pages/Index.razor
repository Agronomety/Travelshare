@page "/"
@inject HttpClient Http
@using TravelshareBlazor.Components

<div class="hero-section">
    <div class="hero-content">
        <div class="container">
            <div class="row">
                <div class="col-lg-8 mx-auto text-center">
                    <h1 class="display-3 fw-bold text-white">Explore The World</h1>
                    <p class="lead text-white mb-4">Discover amazing destinations, travel tips, and stories from fellow adventurers around the globe.</p>
                    <a href="/blogposts" class="btn btn-light btn-lg px-4 me-2">Explore Stories</a>
                    <a href="/register" class="btn btn-outline-light btn-lg px-4">Join Our Community</a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container my-5">
    <!-- Featured Posts Section -->
    <div class="row mb-4">
        <div class="col-12">
            <h2 class="section-title">Featured Destinations</h2>
            <p class="text-muted">Handpicked stories from our travel community</p>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="text-center my-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (featuredPosts.Count == 0)
    {
        <div class="alert alert-info">
            <i class="fas fa-info-circle me-2"></i> No featured posts available at the moment.
        </div>
    }
    else
    {
        <!-- Featured Post (Large) -->
        <div class="row">
            <div class="col-md-12 mb-4">
                @if (featuredPosts.Count > 0)
                {
                    var mainPost = featuredPosts[0];
                    <div class="card featured-card shadow">
                        <div class="row g-0">
                            <div class="col-md-6">
                                @if (!string.IsNullOrEmpty(mainPost.ImageBase64))
                                {
                                    <img src="data:image/png;base64,@mainPost.ImageBase64" class="img-fluid featured-img" alt="Featured Post" />
                                }
                                else
                                {
                                    <div class="placeholder-image bg-light d-flex align-items-center justify-content-center featured-img">
                                        <i class="fas fa-mountain text-muted fa-4x"></i>
                                    </div>
                                }
                            </div>
                            <div class="col-md-6">
                                <div class="card-body d-flex flex-column h-100">
                                    <div class="featured-badge mb-2">
                                        <span class="badge bg-primary">Featured</span>
                                    </div>
                                    <h3 class="card-title">@mainPost.Title</h3>
                                    <p class="card-text flex-grow-1">
                                        @(mainPost.Content.Length > 200 ? mainPost.Content.Substring(0, 200) + "..." : mainPost.Content)
                                    </p>
                                    <div class="d-flex justify-content-between align-items-center mt-3">
                                        <div class="stats">
                                            <span class="me-3"><i class="far fa-heart me-1"></i> @mainPost.Likes.Count</span>
                                            <span><i class="far fa-comment me-1"></i> @mainPost.Comments.Count</span>
                                        </div>
                                        <button @onclick="() => OpenPostModal(mainPost)" class="btn btn-primary">Read More</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Secondary Featured Posts (Grid) -->
        <div class="row">
            @for (int i = 1; i < Math.Min(featuredPosts.Count, 5); i++)
            {
                var post = featuredPosts[i];
                <div class="col-md-6 col-lg-3 mb-4">
                    <div class="card h-100 blog-card shadow-sm">
                        @if (!string.IsNullOrEmpty(post.ImageBase64))
                        {
                            <img src="data:image/png;base64,@post.ImageBase64" class="card-img-top" alt="Blog Image" />
                        }
                        else
                        {
                            <div class="placeholder-image bg-light d-flex align-items-center justify-content-center" style="height: 160px;">
                                <i class="fas fa-image text-muted fa-2x"></i>
                            </div>
                        }
                        <div class="card-body">
                            <h5 class="card-title">@post.Title</h5>
                            <p class="card-text">
                                @(post.Content.Length > 100 ? post.Content.Substring(0, 100) + "..." : post.Content)
                            </p>
                        </div>
                        <div class="card-footer bg-white border-top-0">
                            <div class="d-flex justify-content-between align-items-center">
                                <small class="text-muted">3 days ago</small>
                                <button @onclick="() => OpenPostModal(post)" class="btn btn-sm btn-outline-primary">Read More</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }

    <!-- Categories Section -->
    <div class="row mt-5 mb-4">
        <div class="col-12">
            <h2 class="section-title">Discover By Category</h2>
            <p class="text-muted">Explore destinations by travel style</p>
        </div>
    </div>

    <div class="row g-4 mb-5">
        <div class="col-md-4">
            <div class="category-card shadow-sm" style="background-image: url('/images/category-beach.jpg')">
                <div class="category-overlay">
                    <h3 class="category-title">Beach Getaways</h3>
                    <p class="category-count">24 destinations</p>
                    <a href="/blogposts?category=beach" class="stretched-link"></a>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="category-card shadow-sm" style="background-image: url('/images/category-mountain.jpg')">
                <div class="category-overlay">
                    <h3 class="category-title">Mountain Adventures</h3>
                    <p class="category-count">18 destinations</p>
                    <a href="/blogposts?category=mountain" class="stretched-link"></a>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="category-card shadow-sm" style="background-image: url('/images/category-city.jpg')">
                <div class="category-overlay">
                    <h3 class="category-title">Urban Explorations</h3>
                    <p class="category-count">32 destinations</p>
                    <a href="/blogposts?category=city" class="stretched-link"></a>
                </div>
            </div>
        </div>
    </div>

    <!-- Newsletter Section -->
    <div class="row">
        <div class="col-lg-8 mx-auto">
            <div class="card newsletter-card bg-light shadow">
                <div class="card-body p-4 text-center">
                    <div class="newsletter-icon mb-3">
                        <i class="fas fa-paper-plane fa-2x text-primary"></i>
                    </div>
                    <h3 class="mb-3">Join Our Newsletter</h3>
                    <p class="mb-4">Subscribe to receive travel inspiration, exclusive deals, and updates on new destinations</p>
                    <div class="input-group">
                        <input type="email" class="form-control" placeholder="Your email address">
                        <button class="btn btn-primary" type="button">Subscribe</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Blog Post Modal -->
<BlogPostModal @ref="blogPostModal" BlogPost="selectedPost" OnClose="ClosePostModal" />

@code {
    private List<BlogPost> featuredPosts = new();
    private bool isLoading = true;
    private BlogPostModal blogPostModal;
    private BlogPost selectedPost;

    protected override async Task OnInitializedAsync()
    {
        await LoadFeaturedPosts();
    }

    private async Task LoadFeaturedPosts()
    {
        try
        {
            isLoading = true;
            // Here we're getting featured/popular posts from the API
            // You can modify this to filter by a "featured" flag if your API supports it
            var response = await Http.GetAsync("/api/blogposts?page=1&pageSize=5&orderBy=likes");

            if (response.IsSuccessStatusCode)
            {
                var responseData = await response.Content.ReadAsStringAsync();
                var parsedData = System.Text.Json.JsonSerializer.Deserialize<PaginationResponse>(responseData,
                    new System.Text.Json.JsonSerializerOptions { PropertyNameCaseInsensitive = true });

                if (parsedData != null)
                {
                    featuredPosts = parsedData.BlogPosts;
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading featured posts: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void OpenPostModal(BlogPost post)
    {
        selectedPost = post;
        blogPostModal.Show();
    }

    private void ClosePostModal()
    {
        blogPostModal.Hide();
    }

    private class PaginationResponse
    {
        public int TotalItems { get; set; }
        public int Page { get; set; }
        public int PageSize { get; set; }
        public int TotalPages { get; set; }
        public List<BlogPost> BlogPosts { get; set; } = new();
    }
}